name: CI/CD Pipeline

on:
  push:
    branches:
      - staging

jobs:
  Tests:
    name: Run End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Enable Corepack and Use Specific Yarn Version
      - name: Enable Corepack
        run: corepack enable

      - name: Use Specific Yarn Version
        run: corepack prepare yarn@4.4.0 --activate

      # Step 3: Install dependencies
      - name: Install dependencies
        run: yarn install

      # Step 4: Run e2e tests
      - name: Test
        env:
          HTTP_BASIC_USER: ${{ secrets.HTTP_BASIC_USER }}
          HTTP_BASIC_PASS: ${{ secrets.HTTP_BASIC_PASS }}
          MONGO_CONNECTION_URI_FOR_TESTS: ${{ secrets.MONGO_CONNECTION_URI_FOR_TESTS }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        run: yarn test:e2e

  Deploy:
    name: Deploy To Virtual Server
    needs: Tests
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: staging
          base: main
          title: 'Merge staging into ma in'
          body: |
            This pull request merges changes from staging into main after successful tests.
          draft: false

      - name: Merge Pull Request
        run: |
          gh pr merge ${PR_NUMBER} --merge --auto -R aigul-ermak/NestBloggerAuthAPI
        env:
          PR_NUMBER: ${{ steps.create_pr.outputs.pull-request-number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Deploy to Virtual Server
      - name: Deploy Application
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VS_SSH_KEY }}
          HOST: ${{ secrets.VIRTUAL_SERVER_HOST }}
          USER: ${{ secrets.VIRTUAL_SERVER_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $USER@$HOST << 'EOF'
             cd /home/projects/NestBloggerAuthAPI
             git pull origin main
             yarn install --production
             pm2 restart NestBloggerAuthAPI
          EOF   
